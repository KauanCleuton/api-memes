<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <link rel="stylesheet" href="/public/styles.css">
  <link rel="shortcut icon" href="/public/image/favicon-32x32.png" type="image/x-icon">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/resize-image/2.3.1/resize-image.min.js"></script>
  <title>MegeGren</title>
</head>

<body>
  <h1>MegeGren</h1>
  <form enctype="multipart/form-data" action="/memes" method="POST">
    <label for="caption">Caption:</label>
    <input type="text" id="caption" name="caption" required>
    <br>
    <label for="image">Choose an image:</label>
    <input type="file" id="image" name="image" accept=".jpg, .jpeg, .png" required>
    <br>
    <button type="submit" class="button-submit">Generate Meme</button>
  </form>
  
  <h2>Generated Memes</h2>
  <div id="memes-container" class="gallery"></div>
  <div class="popup" id="popup">
    <div class="popup-content">
        <button class="close" id="close">X</button>
        <img class="meme-popup" id="meme-popup" src="" alt="Meme">
        <a class="download-button" id="download-button" download="meme.jpg">Download</a>
    </div>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
    const memesContainer = document.querySelector('#memes-container');
    const buttonSubmit = document.querySelector(".button-submit");
    const captionInput = document.getElementById('caption');
    const imageInput = document.getElementById('image');
    const memePopup = document.getElementById('meme-popup');
    const downloadButton = document.getElementById('download-button');
    const popup = document.getElementById('popup');
    const buttonClose = document.querySelector('#close')
    buttonSubmit.addEventListener('click', (event) => {
        event.preventDefault();

        const formData = new FormData();
        formData.append('caption', captionInput.value);
        formData.append('image', imageInput.files[0]);

        fetch('/memes', {
            method: 'POST',
            body: formData,
        })
        .then((response) => {
            if (response.ok) {
                return response.json();
            } else {
                throw new Error('Failed to generate meme.');
            }
        })
        .then((newMeme) => {
            displayMeme(newMeme);
            captionInput.value = '';
            imageInput.value = '';
        })
        .catch((error) => {
            console.error(error.message);
        });
    });

    downloadButton.addEventListener('click', () => {
        const downloadLink = document.createElement('a');
        downloadLink.href = memePopup.src;
        downloadLink.download = 'meme.jpg';
        downloadLink.click();
    });

    popup.addEventListener('click', (event) => {
        if (event.target === popup) {
            popup.style.display = 'none';
        }
    });
    buttonClose.addEventListener('click', () => {
      popup.style.display = 'none'
    })
    function displayMeme(meme) {
        const memeDiv = document.createElement('div');
        memeDiv.classList.add('meme');
        const captionHeading = document.createElement('h3');
        const memeImage = document.createElement('img');

        captionHeading.textContent = meme.caption;
        memeImage.src = meme.imagem;
        memeImage.alt = 'Generated Meme';

        memeDiv.appendChild(captionHeading);
        memeDiv.appendChild(memeImage);
        memesContainer.appendChild(memeDiv);

        memeImage.addEventListener('click', () => {
            memePopup.src = meme.imagem;
            popup.style.display = 'block';
        });
    }
});

  </script>
</body>

</html>